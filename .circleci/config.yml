version: 2.1

jobs:
  build-and-test-app:
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - restore_cache:
         keys: [build-application]
      - run:
         name: Install dependencies
         command: |
           make install 
      - run:
         name: copy project files
         command: |
            sudo cp ./config/nginx.conf /etc/nginx/nginx.conf
            sudo cp -r ./www /www
      - run:
         name: build app
         command: |
           make build
      - run:
         name: test app
         command: |
           make test
      - save_cache:
         paths: [node_modules]
         key: build-application

  lint-app:
    docker:
      - image: docker:stable
    steps:
      - checkout
      - setup_remote_docker
      - run:
         name: install dependencies
         command: |
            wget -O ./hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x ./hadolint
      - run:
         name: lint on app
         command: |
            ./hadolint Dockerfile
            
  build-docker-and-push-image:
    docker:
      - image: docker:stable
    steps:
      - checkout
      - run:
         name: install curl
         command: |
            apk add --update curl
      - setup_remote_docker
      - run:
         name: build docker image
         command: |
            docker build --tag=mycapstone:${CIRCLE_WORKFLOW_ID:0:7} .
            docker image ls
      - run:
         name: run docker image
         command: |
            docker run --detach --publish=80:80 --name=mycaptsone mycapstone:${CIRCLE_WORKFLOW_ID:0:7}
      - run:
         name: push to dockerhub
         command: |
            docker login -u kgaaythrii83 -p Dockerhub!123
            docker tag mycapstone:${CIRCLE_WORKFLOW_ID:0:7} kgaaythrii83/mycapstone:${CIRCLE_WORKFLOW_ID:0:7}
            docker push kgaaythrii83/mycapstone:${CIRCLE_WORKFLOW_ID:0:7}

  get-cluster-details:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
         name: get the cluster name
         command: |
            aws configure list
            aws cloudformation \
              list-exports --query "Exports[?Name==\`EksClusterName\`].Value" \
              --no-paginate --output text >> .circleci/files/eksclustername.txt
            cat .circleci/files/eksclustername.txt
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip
      - persist_to_workspace:
          root: ~/project/.circleci/files
          paths:
            - .
            
workflows:
  default:
    jobs:
      #- build-and-test-app
      #- lint-app
      - get-cluster-details 
      #- build-docker-and-push-image:
         requires: [build-and-test-app, lint-app]
        